import { useGetPage0BySlug } from '@/hooks/usePages0';
import { Page } from '@/interfaces/page';
import Layout from '@/layouts/HeaderLayout';
import { getPortfolioPage0BySlug, getPortfolioPages0BySiteId } from '@/lib/pages/page0/read';
import { dehydrate, QueryClient } from '@tanstack/react-query';
import { GetStaticProps } from 'next';
import Head from 'next/head';
import { useRouter } from 'next/router';
import React from 'react'

export default function Index() {
  const router = useRouter()
  const { data } = useGetPage0BySlug(router.query.page0 as string)
  console.log('data', data)
  return (
    <>
      <Head>
        <title>{data?.data.name} | Jesus Calamani</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {
        data?.data.type.slug === 'category' && 
        <div>category</div>
      }
      {
        data?.data.type.slug === 'about' && 
        <div>about</div>
      }
      
    </>
  )
}
Index.getLayout = function getLayout(page: React.ReactElement) {
  return <Layout>{page}</Layout>;
};
export async function getStaticPaths() {
  const pages = await getPortfolioPages0BySiteId(process.env.NEXT_PUBLIC_SITE_URL as string) as Page[]
  return {
    paths: pages.map(data => ({params: {page0: data.slug}})),
    fallback: 'blocking', // can also be true or 'blocking'
  }
}
export const getStaticProps: GetStaticProps = async (ctx) => {
  console.log('ctx', ctx)
  const queryClient = new QueryClient();
  await queryClient.prefetchQuery(
    ["portfolio-get-page0-by-slug", ctx.params?.page0],
    async () =>
    getPortfolioPage0BySlug(
        ctx.params?.page0 as string,
        process.env.NEXT_PUBLIC_SITE_URL as string
      )
  );
  return {
    props: {
      dehydratedState: dehydrate(queryClient),
      revalidate: 86400,
    },
  };
};
